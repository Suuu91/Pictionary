// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  username String @unique
  password String
  lobbyId Int?
  lobby Lobby? @relation(fields: [lobbyId], references: [id])
  joinedAt DateTime @default(now())
  score Int? @default(0)
  rounds Round[] @relation("RoundUsers")
  drawerStatus Boolean @default(false) //has the player participated as a drawer
}

model Subject {
  id Int @id @default(autoincrement())
  text String
}

model Lobby {
  id Int @id @default(autoincrement())
  name String 
  players User[]
  gameStarted Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  gameStatus String @default("pending") //pending, in-progress, completed
  rounds Round[]
  currentRoundId Int?
}

model Round {
  id Int @id @default(autoincrement())
  roundNumber Int
  lobbyId Int
  lobby Lobby @relation(fields: [lobbyId], references: [id])
  roundStartTime    DateTime  
  roundEndTime      DateTime  
  roundTimeLimit    Int       
  roundStatus       String    @default("pending")//pending, in-progress, completed 
  playersInRound User[] @relation("RoundUsers")
}




